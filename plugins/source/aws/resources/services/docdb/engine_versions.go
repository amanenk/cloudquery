// Code generated by codegen; DO NOT EDIT.

package docdb

import (
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func EngineVersions() *schema.Table {
	return &schema.Table{
		Name:      "aws_docdb_engine_versions",
		Resolver:  fetchDocdbEngineVersions,
		Multiplex: client.ServiceAccountRegionMultiplexer("docdb"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "db_engine_description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DBEngineDescription"),
			},
			{
				Name:     "db_engine_version_description",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DBEngineVersionDescription"),
			},
			{
				Name:     "db_parameter_group_family",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DBParameterGroupFamily"),
			},
			{
				Name:     "engine",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Engine"),
			},
			{
				Name:     "engine_version",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("EngineVersion"),
			},
			{
				Name:     "exportable_log_types",
				Type:     schema.TypeStringArray,
				Resolver: schema.PathResolver("ExportableLogTypes"),
			},
			{
				Name:     "supports_log_exports_to_cloudwatch_logs",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("SupportsLogExportsToCloudwatchLogs"),
			},
			{
				Name:     "valid_upgrade_target",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ValidUpgradeTarget"),
			},
		},

		Relations: []*schema.Table{
			ClusterParameters(),
		},
	}
}
