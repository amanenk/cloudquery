// Code generated by codegen; DO NOT EDIT.

package {{.Service}}

import (
	"context"

	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/cloudquery/plugins/source/digitalocean/client"
	"github.com/pkg/errors"
  {{range .Imports}}
  "{{.}}"
  {{end}}
)

func {{.Service | ToCamel}}() *schema.Table {
    return &schema.Table{{template "table.go.tpl" .Table}}
}

func fetch{{.Service  | ToCamel}}(ctx context.Context, meta schema.ClientMeta, _ *schema.Resource, res chan<- interface{}) error {
	svc := meta.(*client.Client)
	getFunc := func() error {
        response, _, err := svc.DoClient.{{.Service  | ToCamel}}.Get(ctx)
        if err != nil {
            return errors.WithStack(err)
        }
        res <- *response
        return nil
    }

    err := client.ThrottleWrapper(ctx, svc, getFunc)
    if err != nil {
        return errors.WithStack(err)
    }
    return nil
}