// Code generated by codegen; DO NOT EDIT.

package {{.Service}}

import (
	"context"

	"github.com/cloudquery/plugin-sdk/schema"
	"github.com/cloudquery/cloudquery/plugins/source/digitalocean/client"
  {{range .Imports}}
  "{{.}}"
  {{end}}
)

func {{.SubServiceName | ToCamel}}() *schema.Table {
    return &schema.Table{{template "table.go.tpl" .Table}}
}

func fetch{{.SubServiceName | ToCamel}}(ctx context.Context, meta schema.ClientMeta, {{if eq .ParentStructName ""}}_{{else}}parent{{end}} *schema.Resource, res chan<- interface{}) error {
	{{if ne .ParentStructName ""}}p := parent.Item.(godo.{{.ParentStructName}}){{end}}
    svc := meta.(*client.Client)
	getFunc := func() error {
        response, _, err := svc.Services.{{.Service  | ToCamel}}.Get{{.SubService | ToCamel}}(ctx{{if ne .ParentStructName ""}}, p.ID{{end}})
        if err != nil {
            return err
        }
        res <- response
        return nil
    }

    err := client.ThrottleWrapper(ctx, svc, getFunc)
    if err != nil {
        return err
    }
    return nil
}